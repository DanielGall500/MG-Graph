*.json

# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# RustRover
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/
.env
package-lock.json

# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
package-lock.json
yarn.lock
pnpm-lock.yaml

# Logs
logs
*.log
*.log.*
pids
*.pid
*.seed
*.pid.lock

# Vite
dist/
.vite/
.vitepress/cache/
.vitepress/dist/

# Typescript
*.tsbuildinfo

# Local env files
.env
.env.*
!.env.example

# Editor directories and files
.idea/
.vscode/
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# macOS
.DS_Store

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
.Trash-*

# Other system files
*.~undo-tree~
*.un~
*.swp
*.swo
*~

# Test coverage
coverage/
*.lcov

# PrimeVue CSS files (compiled/generated)
public/primevue-theme.css
src/assets/primevue-theme.css

# Optional: Ignore Storybook (if used)
.storybook/
storybook-static/

# Optional: Ignore build tools cache
.eslintcache
stylelintcache

# output files
*/output.json

# primevue
ui/src/assets/*
ui/public/